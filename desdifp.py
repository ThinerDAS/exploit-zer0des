#!/usr/bin/python -i

import traceback
import ctypes
import os
import array
import struct

core = ctypes.CDLL(os.path.dirname(os.path.abspath(__file__))+'/desdif.so')

assert core, 'desdif.so not loaded'


def des_encrypt(content, key):
    assert len(content) % 8 == 0
    assert len(key) == 8
    out_content = ctypes.create_string_buffer(len(content))
    core.des_encrypt(content, out_content, key, len(content)//8)
    return out_content.raw


def des_decrypt(content, key):
    assert len(content) % 8 == 0
    assert len(key) == 8
    out_content = ctypes.create_string_buffer(len(content))
    core.des_decrypt(content, out_content, key, len(content)//8)
    return out_content.raw


def genpair(n):
    out_content = ctypes.create_string_buffer(n*16)
    core.pair_stream(out_content, n)
    return out_content.raw


def crack(content):
    assert len(content) % 16 == 0
    n = len(content)//16
    key = ctypes.create_string_buffer(8)
    core.crack(content, n, key)
    return key.raw
